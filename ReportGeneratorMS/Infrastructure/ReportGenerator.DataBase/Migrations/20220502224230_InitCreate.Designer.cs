// <auto-generated />
using System;
using GeneratorDataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeneratorDataBase.Migrations
{
    [DbContext(typeof(ReportGeneratorDBContext))]
    [Migration("20220502224230_InitCreate")]
    partial class InitCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeneratorDataBase.DataBaseModels.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("GeneratorDataBase.DataBaseModels.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GlobalSettingsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SectionToTemplateRelationsId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionTypeTemplatesId")
                        .HasColumnType("int");

                    b.Property<int?>("StylesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GlobalSettingsId");

                    b.HasIndex("SectionToTemplateRelationsId");

                    b.HasIndex("SectionTypeTemplatesId");

                    b.HasIndex("StylesId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("GeneratorDataBase.DataBaseModels.TemplateComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TemplateComponents");
                });

            modelBuilder.Entity("GeneratorDataBase.DataBaseModels.Template", b =>
                {
                    b.HasOne("GeneratorDataBase.DataBaseModels.TemplateComponent", "GlobalSettings")
                        .WithMany("TemplateGlobalSettings")
                        .HasForeignKey("GlobalSettingsId")
                        .HasConstraintName("FK_Templates_TemplateComponents");

                    b.HasOne("GeneratorDataBase.DataBaseModels.TemplateComponent", "SectionToTemplateRelations")
                        .WithMany("TemplateSectionToTemplateRelations")
                        .HasForeignKey("SectionToTemplateRelationsId")
                        .HasConstraintName("FK_Templates_TemplateComponents1");

                    b.HasOne("GeneratorDataBase.DataBaseModels.TemplateComponent", "SectionTypeTemplates")
                        .WithMany("TemplateSectionTypeTemplates")
                        .HasForeignKey("SectionTypeTemplatesId")
                        .HasConstraintName("FK_Templates_TemplateComponents2");

                    b.HasOne("GeneratorDataBase.DataBaseModels.TemplateComponent", "Styles")
                        .WithMany("TemplateStyles")
                        .HasForeignKey("StylesId")
                        .HasConstraintName("FK_Templates_TemplateComponents3");

                    b.Navigation("GlobalSettings");

                    b.Navigation("SectionToTemplateRelations");

                    b.Navigation("SectionTypeTemplates");

                    b.Navigation("Styles");
                });

            modelBuilder.Entity("GeneratorDataBase.DataBaseModels.TemplateComponent", b =>
                {
                    b.Navigation("TemplateGlobalSettings");

                    b.Navigation("TemplateSectionToTemplateRelations");

                    b.Navigation("TemplateSectionTypeTemplates");

                    b.Navigation("TemplateStyles");
                });
#pragma warning restore 612, 618
        }
    }
}
